/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.69
 * Generated at: 2023-07-19 13:42:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import hyphen.helper.HelperFunction;
import hyphen.entity.Student;
import java.util.List;
import hyphen.dao.StudentDao;
import hyphen.conn.DBConnect;
import java.sql.Connection;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/header_link.jsp", Long.valueOf(1689005181033L));
    _jspx_dependants.put("/navbar.jsp", Long.valueOf(1689091876883L));
    _jspx_dependants.put("/footer_link.jsp", Long.valueOf(1689002621926L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("hyphen.helper.HelperFunction");
    _jspx_imports_classes.add("hyphen.dao.StudentDao");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("hyphen.entity.Student");
    _jspx_imports_classes.add("hyphen.conn.DBConnect");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("	<meta charset=\"UTF-8\">\n");
      out.write("	<title>Home Page</title>\n");
      out.write("	");
      out.write("\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\">\n");
      out.write("	\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/style.css\">");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body class=\"bg-light\">\n");
      out.write("\n");
      out.write("	");
      out.write("\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-light\"\n");
      out.write("	style=\"background-color: #e3f2fd;\">\n");
      out.write("	<a class=\"navbar-brand\" href=\"#\">Student Management System</a>\n");
      out.write("	<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n");
      out.write("		data-target=\"#navbarNav\" aria-controls=\"navbarNav\"\n");
      out.write("		aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n");
      out.write("		<span class=\"navbar-toggler-icon\"></span>\n");
      out.write("	</button>\n");
      out.write("	<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n");
      out.write("		<ul class=\"navbar-nav\">\n");
      out.write("			<li class=\"nav-item active\"><a class=\"nav-link\" href=\"index.jsp\">Home\n");
      out.write("					<span class=\"sr-only\">(current)</span>\n");
      out.write("			</a></li>\n");
      out.write("\n");
      out.write("			<li class=\"nav-item\"><a class=\"nav-link\" href=\"add_student.jsp\">Add\n");
      out.write("					Student </a></li>\n");
      out.write("\n");
      out.write("		</ul>\n");
      out.write("	</div>\n");
      out.write("</nav>");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	<div class=\"container\">\n");
      out.write("		<div class=\"row\">\n");
      out.write("			<div class=\"col-md-10 mt-5\">\n");
      out.write("				<div class=\"card\">\n");
      out.write("					<div class=\"card-body table-responsive\">\n");
      out.write("							<h1 class=\"badge badge-primary\" style=\"font-size: xx-large;\">\n");
      out.write("								  All Student Details <span class=\"badge\" style=\"font-size: x-large; margin-left: 10px;  background-color: rgb(233,84,140)\">list</span>				\n");
      out.write("							</h1>\n");
      out.write("							\n");
      out.write("							<c:if test=\"${not empty successMsg}\">\n");
      out.write("								<div class=\"alert-div\">\n");
      out.write("									<div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n");
      out.write("									  <strong>${successMsg}</strong>\n");
      out.write("									  \n");
      out.write("									  <hr>\n");
      out.write("									  <p class=\"mb-0\">Close the message box by clicking X to right.</p>\n");
      out.write("									  \n");
      out.write("									  <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n");
      out.write("									    <span aria-hidden=\"true\">&times;</span>\n");
      out.write("									  </button>\n");
      out.write("									</div>									\n");
      out.write("								</div>\n");
      out.write("								<c:remove var=\"successMsg\"/>							\n");
      out.write("							</c:if>\n");
      out.write("							\n");
      out.write("							<c:if test=\"${not empty errorMsg}\">\n");
      out.write("								<div class=\"alert-div\">\n");
      out.write("									<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n");
      out.write("									  <strong>${errorMsg}</strong>\n");
      out.write("									  \n");
      out.write("									  <hr>\n");
      out.write("									  <p class=\"mb-0\">Close the message box by clicking X to right.</p>										  \n");
      out.write("									  <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n");
      out.write("									    <span aria-hidden=\"true\">&times;</span>\n");
      out.write("									  </button>\n");
      out.write("									</div>									\n");
      out.write("								</div>\n");
      out.write("								<c:remove var=\"errorMsg\"/>							\n");
      out.write("							</c:if>						\n");
      out.write("							\n");
      out.write("						<table class=\"table table-striped\">\n");
      out.write("							<thead>\n");
      out.write("								<tr>\n");
      out.write("									<th scope=\"col\">#id</th>\n");
      out.write("									<th scope=\"col\">Name</th>\n");
      out.write("									<th scope=\"col\">Level</th>\n");
      out.write("									<th scope=\"col\">Email</th>\n");
      out.write("									<th scope=\"col\">Password</th>\n");
      out.write("									<th scope=\"col\">DOB</th>\n");
      out.write("									<th scope=\"col\">Edit</th>\n");
      out.write("								</tr>\n");
      out.write("							</thead>\n");
      out.write("							<tbody>\n");
      out.write("							\n");
      out.write("								");

									StudentDao dao = new StudentDao(DBConnect.getConnection());
									List<Student> list = dao.getAllStudent();
									
									for(Student stud : list) {
									String date = HelperFunction.formateDate(stud.getDob(), "-");
								
      out.write("\n");
      out.write("									<tr>\n");
      out.write("										<td>");
      out.print( stud.getId() );
      out.write("</td>\n");
      out.write("										<td>");
      out.print( stud.getName() );
      out.write("</td>\n");
      out.write("										<td>");
      out.print( stud.getLevel() );
      out.write("</td>\n");
      out.write("										<td>");
      out.print( stud.getEmail() );
      out.write("</td>\n");
      out.write("										<td>");
      out.print( stud.getPassword() );
      out.write("</td>\n");
      out.write("										<td>");
      out.print( date );
      out.write("</td>\n");
      out.write("										<td style=\"display: flex; gap: 6px;\">\n");
      out.write("											<a class=\"custom-btn edit-btn\" href=\"edit_student.jsp?id=");
      out.print( stud.getId());
      out.write("\"><i class=\"fa fa-edit fa-btn\"></i></a>\n");
      out.write("											<a class=\"custom-btn delete-btn\" href=\"delete?id=");
      out.print( stud.getId());
      out.write("\"><i class=\"fa fa-trash fa-btn\"></i></a>\n");
      out.write("										</td>\n");
      out.write("									</tr>								\n");
      out.write("								");
 
									}
								
      out.write("\n");
      out.write("								\n");
      out.write("							</tbody>\n");
      out.write("						</table>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</div>		\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	");
      out.write("\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\"></script>\n");
      out.write("<script\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js\"></script>\n");
      out.write("<script\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js\"></script>");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
